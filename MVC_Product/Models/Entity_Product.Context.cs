//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_Product.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestMVCEntities : DbContext
    {
        public TestMVCEntities()
            : base("name=TestMVCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<product_category> product_category { get; set; }
    
        public virtual int InUPProduct(Nullable<int> pid, string pname, Nullable<decimal> pprice)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var ppriceParameter = pprice.HasValue ?
                new ObjectParameter("pprice", pprice) :
                new ObjectParameter("pprice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InUPProduct", pidParameter, pnameParameter, ppriceParameter);
        }
    
        public virtual int InUPProductMain(Nullable<int> pid, string pname, Nullable<decimal> pprice, string pimage, string pcname, Nullable<bool> pisdemand, string psupply)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var ppriceParameter = pprice.HasValue ?
                new ObjectParameter("pprice", pprice) :
                new ObjectParameter("pprice", typeof(decimal));
    
            var pimageParameter = pimage != null ?
                new ObjectParameter("pimage", pimage) :
                new ObjectParameter("pimage", typeof(string));
    
            var pcnameParameter = pcname != null ?
                new ObjectParameter("pcname", pcname) :
                new ObjectParameter("pcname", typeof(string));
    
            var pisdemandParameter = pisdemand.HasValue ?
                new ObjectParameter("pisdemand", pisdemand) :
                new ObjectParameter("pisdemand", typeof(Boolean));
    
            var psupplyParameter = psupply != null ?
                new ObjectParameter("psupply", psupply) :
                new ObjectParameter("psupply", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InUPProductMain", pidParameter, pnameParameter, ppriceParameter, pimageParameter, pcnameParameter, pisdemandParameter, psupplyParameter);
        }
    }
}
